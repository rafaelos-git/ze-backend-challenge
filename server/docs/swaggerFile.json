{
  "swagger": "2.0",
  "info": {
    "description": "API developed to code backend challenge to position at Ze Delivery",
    "version": "1.0.0",
    "title": "Ze Delivery Backend Challenge API",
    "contact": {
      "email": "angelo.bz.souza@gmail.com"
    }
  },
  "tags": [
    {
      "name": "pdvs",
      "description": "Create and search pdvs"
    }
  ],
  "paths": {
    "/v1/pdvs": {
      "post": {
        "tags": ["pdvs"],
        "summary": "Create a new pdv",
        "operationId": "createPdv",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "pdv",
            "description": "Pdv object to be create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pdv"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Pdv"
            }
          },
          "400": {
            "description": "Bad request error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/pdvs/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "Pdv ID",
          "type": "integer"
        }
      ],
      "get": {
        "tags": ["pdvs"],
        "summary": "Finds a pdv by its id",
        "operationId": "findPdvById",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Pdv"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/pdvs/nearest/{lng}/{lat}": {
      "parameters": [
        {
          "in": "path",
          "name": "lng",
          "required": true,
          "description": "Pdv longitude",
          "type": "number"
        },
        {
          "in": "path",
          "name": "lat",
          "required": true,
          "description": "Pdv latitude",
          "type": "number"
        }
      ],
      "get": {
        "tags": ["pdvs"],
        "summary": "Search nearest pdv considering each pdv's coverage area",
        "operationId": "getNearestPdv",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Pdv"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Pdv": {
      "type": "object",
      "required": ["id", "tradingName", "ownerName", "document", "coverageArea", "address"],
      "properties": {
        "tradingName": {
          "type": "string",
          "description": "Pdv trading name",
          "example": "Vaga Dev Backend Ze Delivery"
        },
        "ownerName": {
          "type": "string",
          "description": "Pdv owner name",
          "example": "Angelo Souza"
        },
        "document": {
          "type": "string",
          "description": "Pdv unique document as CNPJ",
          "example": "0000000000000/0000"
        },
        "coverageArea": {
          "type": "object",
          "description": "Region covered by pdv. Is a GeoJSON MultiPolygon",
          "properties": {
            "type": {
              "type": "string",
              "description": "GeoJSON type MultiPolygon",
              "example": "MultiPolygon"
            },
            "coordinates": {
              "type": "array",
              "example": [
                [
                  [
                    [30, 20],
                    [45, 40],
                    [10, 40],
                    [30, 20]
                  ]
                ],
                [
                  [
                    [15, 5],
                    [40, 10],
                    [10, 20],
                    [5, 10],
                    [15, 5]
                  ]
                ]
              ],
              "items": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "minItems": 2,
                    "maxItems": 2,
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "address": {
          "type": "object",
          "description": "PDV address coordinates in GeoJSON format",
          "properties": {
            "type": {
              "type": "string",
              "description": "GeoJSON type Point",
              "example": "Point"
            },
            "coordinates": {
              "type": "array",
              "minItems": 2,
              "maxItems": 2,
              "example": [0, 0],
              "items": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error responses from endpoint",
      "properties": {
        "error": {
          "type": "boolean",
          "description": "Indicate that there is an error",
          "example": true
        },
        "type": {
          "type": "string",
          "description": "Indicate error's type",
          "enum": [
            "ResourceNotFound",
            "NotCoveredArea",
            "ValidationError",
            "MongoError",
            "UnknownError"
          ],
          "example": "ValidationError"
        },
        "messages": {
          "type": "array",
          "description": "Messages to specify errors",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
